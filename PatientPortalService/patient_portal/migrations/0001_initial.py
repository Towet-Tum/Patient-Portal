# Generated by Django 5.1.6 on 2025-02-17 09:52

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(db_index=True, max_length=255, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('deactivated', 'Deactivated')], db_index=True, default='active', max_length=20)),
                ('password_last_changed', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
        ),
        migrations.CreateModel(
            name='IntegrationLog',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('system_name', models.CharField(max_length=100)),
                ('data_type', models.CharField(blank=True, max_length=100)),
                ('data_reference', models.CharField(blank=True, max_length=100)),
                ('sync_status', models.CharField(choices=[('success', 'Success'), ('failure', 'Failure')], db_index=True, default='success', max_length=20)),
                ('last_sync_date', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role_name', models.CharField(db_index=True, max_length=50, unique=True)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('appointment_id', models.AutoField(primary_key=True, serialize=False)),
                ('scheduled_time', models.DateTimeField(db_index=True)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('cancelled', 'Cancelled'), ('completed', 'Completed'), ('rescheduled', 'Rescheduled')], db_index=True, default='scheduled', max_length=20)),
                ('reason', models.TextField(blank=True)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_as_doctor', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointments_as_patient', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('audit_id', models.AutoField(primary_key=True, serialize=False)),
                ('action', models.CharField(db_index=True, max_length=100)),
                ('target_table', models.CharField(blank=True, max_length=100)),
                ('target_id', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45)),
                ('event_timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('details', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LabResult',
            fields=[
                ('lab_result_id', models.AutoField(primary_key=True, serialize=False)),
                ('test_type', models.CharField(db_index=True, max_length=100)),
                ('result_value', models.CharField(blank=True, max_length=100)),
                ('result_date', models.DateTimeField(db_index=True)),
                ('comments', models.TextField(blank=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lab_results', to=settings.AUTH_USER_MODEL)),
                ('physician', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lab_results_reviewed', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message_body', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('read_status', models.BooleanField(db_index=True, default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('notification_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=150)),
                ('message', models.TextField()),
                ('type', models.CharField(choices=[('appointment', 'Appointment'), ('payment', 'Payment'), ('prescription', 'Prescription'), ('general', 'General')], db_index=True, default='general', max_length=20)),
                ('status', models.CharField(choices=[('unread', 'Unread'), ('read', 'Read')], db_index=True, default='unread', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], db_index=True, default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='patient_portal.appointment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('prescription_id', models.AutoField(primary_key=True, serialize=False)),
                ('medication', models.CharField(max_length=150)),
                ('dosage', models.CharField(blank=True, max_length=50)),
                ('frequency', models.CharField(blank=True, max_length=50)),
                ('instructions', models.TextField(blank=True)),
                ('refill_requested', models.BooleanField(db_index=True, default=False)),
                ('request_date', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('approved_date', models.DateTimeField(blank=True, null=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions_given', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='patient_portal.role')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='roles',
            field=models.ManyToManyField(related_name='users', through='patient_portal.UserRole', to='patient_portal.role'),
        ),
        migrations.CreateModel(
            name='DoctorProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='doctor_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('specialization', models.CharField(blank=True, db_index=True, max_length=150)),
                ('bio', models.TextField(blank=True)),
                ('working_hours', models.JSONField(blank=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['specialization'], name='patient_por_special_90c936_idx')],
            },
        ),
        migrations.CreateModel(
            name='PatientProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='patient_profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('emergency_contact', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'indexes': [models.Index(fields=['last_name', 'first_name'], name='patient_por_last_na_99bd1b_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['scheduled_time', 'status'], name='patient_por_schedul_d3b49e_idx'),
        ),
        migrations.AddIndex(
            model_name='appointment',
            index=models.Index(fields=['patient', 'doctor'], name='patient_por_patient_e5f375_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['event_timestamp'], name='patient_por_event_t_034001_idx'),
        ),
        migrations.AddIndex(
            model_name='labresult',
            index=models.Index(fields=['result_date'], name='patient_por_result__b4996f_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sent_at'], name='patient_por_sent_at_65b97a_idx'),
        ),
        migrations.AddIndex(
            model_name='prescription',
            index=models.Index(fields=['request_date'], name='patient_por_request_0b61c9_idx'),
        ),
        migrations.AddIndex(
            model_name='userrole',
            index=models.Index(fields=['assigned_at'], name='patient_por_assigne_520c0c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userrole',
            unique_together={('user', 'role')},
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_login'], name='patient_por_last_lo_54c014_idx'),
        ),
    ]
